[{"/Users/jangjunsu/Documents/practice/baro-next/resource/pages/_app.tsx":"1","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/_document.tsx":"2","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/index.tsx":"3","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/login/index.tsx":"4","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/machine/info.tsx":"5","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/machine/notification.tsx":"6","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/monitoring/mon2.tsx":"7","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/monitoring/mon3.tsx":"8","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/monitoring/setting.tsx":"9","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/my/index.tsx":"10","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/production/record.tsx":"11","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/production/report.tsx":"12","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/work/program.tsx":"13","/Users/jangjunsu/Documents/practice/baro-next/resource/components/badge/activeBadge.tsx":"14","/Users/jangjunsu/Documents/practice/baro-next/resource/components/badge/defaultBadge.tsx":"15","/Users/jangjunsu/Documents/practice/baro-next/resource/components/badge/informationBadge.tsx":"16","/Users/jangjunsu/Documents/practice/baro-next/resource/components/badge/workEnvironmentBadge.tsx":"17","/Users/jangjunsu/Documents/practice/baro-next/resource/components/button/angleButton.tsx":"18","/Users/jangjunsu/Documents/practice/baro-next/resource/components/button/circleButton.tsx":"19","/Users/jangjunsu/Documents/practice/baro-next/resource/components/button/defaultButton.tsx":"20","/Users/jangjunsu/Documents/practice/baro-next/resource/components/button/machineButton.tsx":"21","/Users/jangjunsu/Documents/practice/baro-next/resource/components/button/switchButton.tsx":"22","/Users/jangjunsu/Documents/practice/baro-next/resource/components/chart/lotBarChart.tsx":"23","/Users/jangjunsu/Documents/practice/baro-next/resource/components/container/pageContainer.tsx":"24","/Users/jangjunsu/Documents/practice/baro-next/resource/components/datePicker/defaultDatePicker.tsx":"25","/Users/jangjunsu/Documents/practice/baro-next/resource/components/datePicker/rangeDatePicker.tsx":"26","/Users/jangjunsu/Documents/practice/baro-next/resource/components/header/header.tsx":"27","/Users/jangjunsu/Documents/practice/baro-next/resource/components/header/rangeDatePickHeader.tsx":"28","/Users/jangjunsu/Documents/practice/baro-next/resource/components/header/singleDatePickHeader.tsx":"29","/Users/jangjunsu/Documents/practice/baro-next/resource/components/image/logo.tsx":"30","/Users/jangjunsu/Documents/practice/baro-next/resource/components/indicator/defaultLoding.tsx":"31","/Users/jangjunsu/Documents/practice/baro-next/resource/components/indicator/loadingIndicator.tsx":"32","/Users/jangjunsu/Documents/practice/baro-next/resource/components/input/checkbox.tsx":"33","/Users/jangjunsu/Documents/practice/baro-next/resource/components/input/defaultInput.tsx":"34","/Users/jangjunsu/Documents/practice/baro-next/resource/components/input/selector.tsx":"35","/Users/jangjunsu/Documents/practice/baro-next/resource/components/input/selectorOption.tsx":"36","/Users/jangjunsu/Documents/practice/baro-next/resource/components/layout/cardLayout.tsx":"37","/Users/jangjunsu/Documents/practice/baro-next/resource/components/linker/linker.tsx":"38","/Users/jangjunsu/Documents/practice/baro-next/resource/components/list/DotList.tsx":"39","/Users/jangjunsu/Documents/practice/baro-next/resource/components/machine/DoneSoonList.tsx":"40","/Users/jangjunsu/Documents/practice/baro-next/resource/components/machine/Monitoring2Item.tsx":"41","/Users/jangjunsu/Documents/practice/baro-next/resource/components/machine/RealTimeMachineItem.tsx":"42","/Users/jangjunsu/Documents/practice/baro-next/resource/components/machine/reportCard.tsx":"43","/Users/jangjunsu/Documents/practice/baro-next/resource/components/modal/addressModal.tsx":"44","/Users/jangjunsu/Documents/practice/baro-next/resource/components/modal/alarmModal.tsx":"45","/Users/jangjunsu/Documents/practice/baro-next/resource/components/modal/defaultModal.tsx":"46","/Users/jangjunsu/Documents/practice/baro-next/resource/components/modal/userModal.tsx":"47","/Users/jangjunsu/Documents/practice/baro-next/resource/components/program/ncCode.tsx":"48","/Users/jangjunsu/Documents/practice/baro-next/resource/components/progress/progressBar.tsx":"49","/Users/jangjunsu/Documents/practice/baro-next/resource/components/progress/progressCircle.tsx":"50","/Users/jangjunsu/Documents/practice/baro-next/resource/components/table/defaultTable.tsx":"51","/Users/jangjunsu/Documents/practice/baro-next/resource/components/table/monitoringRow.tsx":"52","/Users/jangjunsu/Documents/practice/baro-next/resource/components/tools/postCode.tsx":"53","/Users/jangjunsu/Documents/practice/baro-next/resource/components/tools/separator.tsx":"54","/Users/jangjunsu/Documents/practice/baro-next/resource/components/user/userInformation.tsx":"55","/Users/jangjunsu/Documents/practice/baro-next/resource/components/warning/isEmpty.tsx":"56","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/alarm/alarm.dto.ts":"57","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/alarm/alarmList.dto.ts":"58","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/auth/auth.dto.ts":"59","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/machine/machine.dto.ts":"60","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/machine/machineSummary.dto.ts":"61","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/machine/notification.dto.ts":"62","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/machine/notificationList.dto.ts":"63","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/machine/processedQuantity.dto.ts":"64","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/machine/realTimeData.dto.ts":"65","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/monitor/monitor.dto.ts":"66","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/monitor/monitorList.dto.ts":"67","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/program/function.dto.ts":"68","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/program/program.dto.ts":"69","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/record/record.dto.ts":"70","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/report/lot.dto.ts":"71","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/report/product.dto.ts":"72","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/report/productData.dto.ts":"73","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/transmitters/transmitters.dto.ts":"74","/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/user/user.dto.ts":"75","/Users/jangjunsu/Documents/practice/baro-next/resource/src/mobx/store.ts":"76","/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/account/adminAccount.model.ts":"77","/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/account/billInformation.model.ts":"78","/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/account/loginAccount.model.ts":"79","/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/account/monitorAccount.model.ts":"80","/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/login/account.model.ts":"81","/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/login/contact.model.ts":"82","/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/machine/notification.model.ts":"83","/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/menu/menu.model.ts":"84","/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/menu/subMenu.model.ts":"85","/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/menu/userMenu.model.ts":"86","/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/product/product.model.ts":"87","/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/record/record.model.ts":"88","/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/alert.module.ts":"89","/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/api.module.ts":"90","/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/auth.module.ts":"91","/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/chart.module.ts":"92","/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/excel.module.ts":"93","/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/machineStatus.module.ts":"94","/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/mapper.module.ts":"95","/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/socket.module.ts":"96","/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/time.module.ts":"97","/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/auth/auth.viewModel.ts":"98","/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/default.viewModel.ts":"99","/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/indicator/indicator.viewModel.ts":"100","/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/machine/machine.viewModel.ts":"101","/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/main/main.viewModel.ts":"102","/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/monitor/monitor.viewModel.ts":"103","/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/program/program.viewModel.ts":"104","/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/record/record.viewModel.ts":"105","/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/report/report.viewModel.ts":"106","/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/user/user.viewModel.ts":"107"},{"size":2065,"mtime":1692161222359,"results":"108","hashOfConfig":"109"},{"size":1360,"mtime":1692161222359,"results":"110","hashOfConfig":"109"},{"size":4124,"mtime":1692161222359,"results":"111","hashOfConfig":"109"},{"size":10852,"mtime":1692161222359,"results":"112","hashOfConfig":"109"},{"size":2873,"mtime":1692161222359,"results":"113","hashOfConfig":"109"},{"size":4223,"mtime":1692161222359,"results":"114","hashOfConfig":"109"},{"size":3102,"mtime":1692161222360,"results":"115","hashOfConfig":"109"},{"size":3642,"mtime":1692161222360,"results":"116","hashOfConfig":"109"},{"size":8422,"mtime":1692161222360,"results":"117","hashOfConfig":"109"},{"size":16081,"mtime":1692161222360,"results":"118","hashOfConfig":"109"},{"size":2605,"mtime":1692161222360,"results":"119","hashOfConfig":"109"},{"size":3375,"mtime":1692161222360,"results":"120","hashOfConfig":"109"},{"size":5548,"mtime":1692161222360,"results":"121","hashOfConfig":"109"},{"size":467,"mtime":1692161222352,"results":"122","hashOfConfig":"109"},{"size":553,"mtime":1692161222352,"results":"123","hashOfConfig":"109"},{"size":727,"mtime":1692161222352,"results":"124","hashOfConfig":"109"},{"size":551,"mtime":1692161222352,"results":"125","hashOfConfig":"109"},{"size":984,"mtime":1692161222352,"results":"126","hashOfConfig":"109"},{"size":1129,"mtime":1692161222352,"results":"127","hashOfConfig":"109"},{"size":2038,"mtime":1692161222353,"results":"128","hashOfConfig":"109"},{"size":1526,"mtime":1692161222353,"results":"129","hashOfConfig":"109"},{"size":2747,"mtime":1692161222353,"results":"130","hashOfConfig":"109"},{"size":3639,"mtime":1692161222353,"results":"131","hashOfConfig":"109"},{"size":550,"mtime":1692161222353,"results":"132","hashOfConfig":"109"},{"size":4011,"mtime":1692161222353,"results":"133","hashOfConfig":"109"},{"size":6133,"mtime":1692161222353,"results":"134","hashOfConfig":"109"},{"size":7999,"mtime":1692161222354,"results":"135","hashOfConfig":"109"},{"size":1893,"mtime":1692161222354,"results":"136","hashOfConfig":"109"},{"size":2361,"mtime":1692161222354,"results":"137","hashOfConfig":"109"},{"size":403,"mtime":1692161222354,"results":"138","hashOfConfig":"109"},{"size":1415,"mtime":1692161222354,"results":"139","hashOfConfig":"109"},{"size":2721,"mtime":1692161222354,"results":"140","hashOfConfig":"109"},{"size":2744,"mtime":1692161222354,"results":"141","hashOfConfig":"109"},{"size":4197,"mtime":1692161222354,"results":"142","hashOfConfig":"109"},{"size":1235,"mtime":1692161222355,"results":"143","hashOfConfig":"109"},{"size":468,"mtime":1692161222355,"results":"144","hashOfConfig":"109"},{"size":749,"mtime":1692161222355,"results":"145","hashOfConfig":"109"},{"size":981,"mtime":1692161222355,"results":"146","hashOfConfig":"109"},{"size":592,"mtime":1692161222355,"results":"147","hashOfConfig":"109"},{"size":2580,"mtime":1692161222355,"results":"148","hashOfConfig":"109"},{"size":181,"mtime":1692161222355,"results":"149","hashOfConfig":"109"},{"size":2822,"mtime":1692161222356,"results":"150","hashOfConfig":"109"},{"size":10840,"mtime":1692161222356,"results":"151","hashOfConfig":"109"},{"size":1145,"mtime":1692161222356,"results":"152","hashOfConfig":"109"},{"size":3683,"mtime":1692161222356,"results":"153","hashOfConfig":"109"},{"size":1653,"mtime":1692161222356,"results":"154","hashOfConfig":"109"},{"size":3711,"mtime":1692161222356,"results":"155","hashOfConfig":"109"},{"size":4305,"mtime":1692161222356,"results":"156","hashOfConfig":"109"},{"size":818,"mtime":1692161222356,"results":"157","hashOfConfig":"109"},{"size":1349,"mtime":1692161222356,"results":"158","hashOfConfig":"109"},{"size":3998,"mtime":1692161222357,"results":"159","hashOfConfig":"109"},{"size":3888,"mtime":1692161222357,"results":"160","hashOfConfig":"109"},{"size":482,"mtime":1692161222357,"results":"161","hashOfConfig":"109"},{"size":358,"mtime":1692161222357,"results":"162","hashOfConfig":"109"},{"size":1288,"mtime":1692161222357,"results":"163","hashOfConfig":"109"},{"size":628,"mtime":1692161222357,"results":"164","hashOfConfig":"109"},{"size":510,"mtime":1692161222366,"results":"165","hashOfConfig":"109"},{"size":262,"mtime":1692161222366,"results":"166","hashOfConfig":"109"},{"size":527,"mtime":1692161222366,"results":"167","hashOfConfig":"109"},{"size":1636,"mtime":1692161222367,"results":"168","hashOfConfig":"109"},{"size":290,"mtime":1692161222367,"results":"169","hashOfConfig":"109"},{"size":438,"mtime":1692161222367,"results":"170","hashOfConfig":"109"},{"size":319,"mtime":1692161222367,"results":"171","hashOfConfig":"109"},{"size":298,"mtime":1692161222367,"results":"172","hashOfConfig":"109"},{"size":1795,"mtime":1692161222367,"results":"173","hashOfConfig":"109"},{"size":552,"mtime":1692161222367,"results":"174","hashOfConfig":"109"},{"size":263,"mtime":1692161222367,"results":"175","hashOfConfig":"109"},{"size":349,"mtime":1692161222367,"results":"176","hashOfConfig":"109"},{"size":1075,"mtime":1692161222368,"results":"177","hashOfConfig":"109"},{"size":281,"mtime":1692161222368,"results":"178","hashOfConfig":"109"},{"size":104,"mtime":1692161222368,"results":"179","hashOfConfig":"109"},{"size":452,"mtime":1692161222368,"results":"180","hashOfConfig":"109"},{"size":890,"mtime":1692161222368,"results":"181","hashOfConfig":"109"},{"size":730,"mtime":1692161222368,"results":"182","hashOfConfig":"109"},{"size":851,"mtime":1692161222369,"results":"183","hashOfConfig":"109"},{"size":2341,"mtime":1692161222369,"results":"184","hashOfConfig":"109"},{"size":351,"mtime":1692161222369,"results":"185","hashOfConfig":"109"},{"size":256,"mtime":1692161222369,"results":"186","hashOfConfig":"109"},{"size":100,"mtime":1692161222369,"results":"187","hashOfConfig":"109"},{"size":353,"mtime":1692161222369,"results":"188","hashOfConfig":"109"},{"size":101,"mtime":1692161222369,"results":"189","hashOfConfig":"109"},{"size":306,"mtime":1692161222370,"results":"190","hashOfConfig":"109"},{"size":317,"mtime":1692161222370,"results":"191","hashOfConfig":"109"},{"size":401,"mtime":1692161222370,"results":"192","hashOfConfig":"109"},{"size":123,"mtime":1692161222370,"results":"193","hashOfConfig":"109"},{"size":267,"mtime":1692161222370,"results":"194","hashOfConfig":"109"},{"size":161,"mtime":1692161222370,"results":"195","hashOfConfig":"109"},{"size":203,"mtime":1692161222370,"results":"196","hashOfConfig":"109"},{"size":3291,"mtime":1692161222371,"results":"197","hashOfConfig":"109"},{"size":6736,"mtime":1692161222371,"results":"198","hashOfConfig":"109"},{"size":725,"mtime":1692161222371,"results":"199","hashOfConfig":"109"},{"size":546,"mtime":1692161222371,"results":"200","hashOfConfig":"109"},{"size":1528,"mtime":1692161222371,"results":"201","hashOfConfig":"109"},{"size":2305,"mtime":1692161222371,"results":"202","hashOfConfig":"109"},{"size":4931,"mtime":1692161222371,"results":"203","hashOfConfig":"109"},{"size":1942,"mtime":1692161222371,"results":"204","hashOfConfig":"109"},{"size":2586,"mtime":1692161222372,"results":"205","hashOfConfig":"109"},{"size":3114,"mtime":1692161222372,"results":"206","hashOfConfig":"109"},{"size":2763,"mtime":1692161222372,"results":"207","hashOfConfig":"109"},{"size":488,"mtime":1692161222372,"results":"208","hashOfConfig":"109"},{"size":15221,"mtime":1692161222372,"results":"209","hashOfConfig":"109"},{"size":4499,"mtime":1692161222372,"results":"210","hashOfConfig":"109"},{"size":8384,"mtime":1692161222373,"results":"211","hashOfConfig":"109"},{"size":12054,"mtime":1692161222373,"results":"212","hashOfConfig":"109"},{"size":2220,"mtime":1692161222373,"results":"213","hashOfConfig":"109"},{"size":5154,"mtime":1692161222373,"results":"214","hashOfConfig":"109"},{"size":6421,"mtime":1692161222373,"results":"215","hashOfConfig":"109"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"985ef8",{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381"},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","suppressedMessages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","suppressedMessages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","suppressedMessages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","suppressedMessages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","suppressedMessages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","suppressedMessages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","suppressedMessages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","suppressedMessages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","suppressedMessages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","suppressedMessages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","suppressedMessages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","suppressedMessages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","suppressedMessages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","suppressedMessages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","suppressedMessages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","suppressedMessages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","suppressedMessages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","suppressedMessages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","suppressedMessages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","suppressedMessages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","suppressedMessages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","suppressedMessages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","suppressedMessages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","suppressedMessages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","suppressedMessages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","suppressedMessages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jangjunsu/Documents/practice/baro-next/resource/pages/_app.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/pages/_document.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/pages/index.tsx",["550"],[],"import { inject, observer } from \"mobx-react\";\nimport { useEffect, useState } from \"react\";\nimport MainViewModel from \"../src/viewModels/main/main.viewModel\";\nimport React from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport RealTimeMachineItem from \"../components/machine/RealTimeMachineItem\";\nimport MachineDto from \"../src/dto/machine/machine.dto\";\nimport PageContainer from \"../components/container/pageContainer\";\nimport DoneMachine from \"../components/machine/DoneSoonList\";\nimport MachineViewModel from \"../src/viewModels/machine/machine.viewModel\";\nimport CardLayout from \"../components/layout/cardLayout\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface IProps {\n  machineViewModel: MachineViewModel;\n}\n\nfunction MainView(props: IProps) {\n  const machineViewModel = props.machineViewModel;\n  const [time, setTime] = useState<string>(\"\");\n\n  const getFormattedTime = () => {\n    return moment().format(\"YYYY.MM.DD HH:mm:ss\");\n  };\n\n  useEffect(() => {\n    setTime(getFormattedTime());\n    const interval = setInterval(() => {\n      setTime(getFormattedTime());\n    }, 1000);\n    const initialize = async () => {\n      await machineViewModel.getMachineList();\n      machineViewModel.getProcessedQuantity();\n    };\n\n    initialize();\n\n    return () => {\n      clearInterval(interval);\n      if (machineViewModel.socket?.socket?.readyState === WebSocket.OPEN) {\n        machineViewModel.socket.disconnect();\n      }\n    };\n  }, []);\n\n  return (\n    <PageContainer>\n      <Container.Time>{time}</Container.Time>\n      <Container.RowFlex>\n        <CardLayout\n          style={{\n            width: \" 690px\",\n            height: \"410px\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            padding: \" 24px\",\n          }}\n        >\n          <SectionTitle>기계별 가공 수량</SectionTitle>\n          {machineViewModel.processChart ? (\n            <Bar\n              options={machineViewModel.processChart.options}\n              data={machineViewModel.processChart.data}\n            />\n          ) : (\n            <div>\n              <SectionTitle>가공 기계가 없습니다.</SectionTitle>\n            </div>\n          )}\n        </CardLayout>\n        <CardLayout\n          style={{\n            minWidth: \"382px\",\n            gap: \"32px\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            padding: \"24px\",\n          }}\n        >\n          <SectionTitle>공정 임박 기계</SectionTitle>\n          <DoneMachine list={machineViewModel.machines} />\n        </CardLayout>\n      </Container.RowFlex>\n      <CardLayout\n        style={{\n          margin: \"0 auto\",\n          width: \"1152px\",\n          alignItems: \"center\",\n          gap: \"32px\",\n          padding: \"24px\",\n        }}\n      >\n        <SectionTitle>전체 공정 현황</SectionTitle>\n        <MachineWrap>\n          {machineViewModel.machines.map((machine: MachineDto, key: number) => {\n            return (\n              <RealTimeMachineItem\n                data={machine}\n                key={`real_time_machine_${key}`}\n              />\n            );\n          })}\n        </MachineWrap>\n      </CardLayout>\n    </PageContainer>\n  );\n}\n\nexport default inject(\"machineViewModel\")(observer(MainView));\n\nconst Container = {\n  RowFlex: styled.div`\n    margin: 0 auto;\n    display: flex;\n    gap: 32px;\n    & canvas {\n      max-width: 690px !important;\n      max-height: 428px !important;\n      margin: -12px 0 0 -12px;\n    }\n  `,\n  Time: styled.p`\n    width: 100%;\n    height: 24px;\n    text-align: center;\n    font-size: 20px;\n    font-weight: 600;\n    margin-bottom: -16px;\n  `,\n};\n\nconst SectionTitle = styled.p`\n  width: 100%;\n  font-weight: 600;\n  text-align: center;\n`;\n\nconst MachineWrap = styled.div`\n  display: grid;\n  grid-template-rows: repeat(2, 1fr);\n  grid-template-columns: repeat(4, 1fr);\n  gap: 24px;\n`;\n","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/login/index.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/pages/machine/info.tsx",["551"],[],"import { inject, observer } from \"mobx-react\";\nimport PageContainer from \"../../components/container/pageContainer\";\nimport CardLayout from \"../../components/layout/cardLayout\";\nimport MachineViewModel from \"../../src/viewModels/machine/machine.viewModel\";\nimport { useEffect } from \"react\";\nimport MachineSummaryDto from \"../../src/dto/machine/machineSummary.dto\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface IProps {\n  machineViewModel: MachineViewModel;\n}\n\nfunction MachineInfoView(props: IProps) {\n  const machineViewModel = props.machineViewModel;\n\n  useEffect(() => {\n    machineViewModel.getList();\n  }, []);\n\n  return (\n    <PageContainer>\n      <CardLayout style={{ height: \"100%\" }}>\n        <LayoutTitle>기계정보관리</LayoutTitle>\n        <MachineWrap>\n          {machineViewModel.machineSummary.map(\n            (machine: MachineSummaryDto, key: number) => {\n              return (\n                <MachineItem key={`machine_edit_${key}`}>\n                  <MachineNumber>{machine.machineNo}</MachineNumber>\n                  <p>{machine.mid}</p>\n                  <IconBox\n                    onClick={machineViewModel.handleClickEdit}\n                    data-id={machine.id}\n                  >\n                    <EditIcon icon={faPenToSquare} />\n                  </IconBox>\n                </MachineItem>\n              );\n            }\n          )}\n        </MachineWrap>\n      </CardLayout>\n    </PageContainer>\n  );\n}\n\nexport default inject(\"machineViewModel\")(observer(MachineInfoView));\n\nconst LayoutTitle = styled.h2`\n  width: 100%;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nconst MachineWrap = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 24px;\n\n  @media screen and (max-width: 1258px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media screen and (max-width: 950px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst MachineItem = styled.div`\n  position: relative;\n  box-shadow: 0 2px 8px rgba(76, 78, 100, 0.22);\n  background: #e1ebfc;\n  display: flex;\n  align-items: center;\n  width: calc(100% - 16px);\n  height: 64px;\n  padding: 8px;\n  gap: 32px;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1;\n`;\n\nconst MachineNumber = styled.p`\n  background: #f2f6fe;\n  width: 72px;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst IconBox = styled.div`\n  cursor: pointer;\n  transition: all 0.4s;\n  border-radius: 50%;\n  position: absolute;\n  right: 8px;\n  top: 8px;\n  width: 26px;\n  height: 26px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: rgba(200, 200, 200, 0.5);\n  }\n`;\nconst EditIcon = styled(FontAwesomeIcon)`\n  width: 16px;\n  height: 16px;\n`;\n","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/machine/notification.tsx",["552"],[],"import { inject, observer } from \"mobx-react\";\nimport MachineViewModel from \"../../src/viewModels/machine/machine.viewModel\";\nimport PageContainer from \"../../components/container/pageContainer\";\nimport RangeDatePickHeader from \"../../components/header/rangeDatePickHeader\";\nimport DefaultTable from \"../../components/table/defaultTable\";\nimport styled from \"styled-components\";\nimport { useEffect, useRef } from \"react\";\nimport Selector from \"../../components/input/selector\";\nimport SelectorOption from \"../../components/input/selectorOption\";\nimport { SortType } from \"../../config/constants\";\nimport DefaultInput from \"../../components/input/defaultInput\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport MachineSummaryDto from \"../../src/dto/machine/machineSummary.dto\";\n\ninterface IProps {\n  machineViewModel: MachineViewModel;\n}\n\nfunction MachineNotificationView(props: IProps) {\n  const machineViewModel = props.machineViewModel;\n\n  useEffect(() => {\n    machineViewModel.getList();\n    machineViewModel.insertListNotification();\n  }, []);\n\n  const selectorStyle = {\n    backgroundImage: `linear-gradient(45deg, transparent 50%, gray 50%),\nlinear-gradient(135deg, gray 50%, transparent 50%)`,\n    backgroundPosition: `calc(100% - 16px) calc(1em + 2px),\ncalc(100% - 8px) calc(1em + 2px), calc(100% - 2.5em) 0.5em`,\n    width: \"120px\",\n    height: \"42px\",\n  };\n\n  return (\n    <PageContainer style={{ gap: \"16px\" }}>\n      <RangeDatePickHeader\n        start={machineViewModel.notiModel.startDay}\n        end={machineViewModel.notiModel.endDay}\n        onChange={machineViewModel.handleChangeDay}\n        title=\"알람조회\"\n        childrenStyle={{ gap: \"4px\" }}\n      >\n        <Selector\n          onChange={machineViewModel.handleChangeSort}\n          style={selectorStyle}\n          defaultValue={SortType.DESCENDING}\n        >\n          <SelectorOption title=\"최신순\" value={SortType.DESCENDING} />\n          <SelectorOption title=\"과거순\" value={SortType.ASCENDING} />\n        </Selector>\n        <Selector\n          onChange={machineViewModel.handleChangeMachineFilter}\n          style={selectorStyle}\n          defaultValue={0}\n        >\n          <>\n            <SelectorOption title=\"전체보기\" value={0} />\n            {machineViewModel.machineSummary.map(\n              (machine: MachineSummaryDto, key: number) => {\n                return (\n                  <SelectorOption\n                    title={machine.mid}\n                    value={machine.id}\n                    key={`machine_mid_filter_${key}`}\n                  />\n                );\n              }\n            )}\n          </>\n        </Selector>\n        <DefaultInput\n          type=\"text\"\n          value={machineViewModel.notiModel.searchKeyword}\n          placeholder=\"검색할 알림을 입력하세요\"\n          onChange={machineViewModel.handleChangeSearchKeyword}\n          onKeyDown={machineViewModel.handleKeyDownSearch}\n          boxstyle={{ width: \"220px\", height: \"42px\", padding: \"0\" }}\n          style={{\n            height: \"40px\",\n            padding: \"0 12px\",\n          }}\n        >\n          <FontAwesomeIcon\n            icon={faMagnifyingGlass}\n            onClick={machineViewModel.handleClickSearch}\n          />\n        </DefaultInput>\n      </RangeDatePickHeader>\n      <TableLayout>\n        <TablePadding>\n          <DefaultTable\n            header={machineViewModel.tableHeader}\n            data={machineViewModel.notiList.notifications}\n            isRowSpan={false}\n            resultCount={`결과 ${machineViewModel.notiList.notifications.length.toLocaleString(\n              \"en-US\",\n              { style: \"decimal\", useGrouping: true }\n            )}개`}\n          />\n        </TablePadding>\n      </TableLayout>\n    </PageContainer>\n  );\n}\n\nexport default inject(\"machineViewModel\")(observer(MachineNotificationView));\n\nconst TableLayout = styled.section`\n  overflow: hidden;\n  background: #fff;\n  padding: 16px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(76, 78, 100, 0.22);\n`;\n\nconst TablePadding = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  overflow: auto;\n`;\n","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/monitoring/mon2.tsx",["553"],[],"import { inject, observer } from \"mobx-react\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport MachineViewModel from \"../../src/viewModels/machine/machine.viewModel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport MachineDto from \"../../src/dto/machine/machine.dto\";\nimport Monitoring2Item from \"../../components/machine/Monitoring2Item\";\n\ninterface IProps {\n  machineViewModel: MachineViewModel;\n}\n\nfunction Monitoring2View(props: IProps) {\n  const machineViewModel = props.machineViewModel;\n  const [time, setTime] = useState<string>(\"\");\n\n  const getFormattedTime = () => {\n    return moment().format(\"YYYY.MM.DD HH:mm:ss\");\n  };\n\n  useEffect(() => {\n    setTime(getFormattedTime());\n    const interval = setInterval(() => {\n      setTime(getFormattedTime());\n    }, 1000);\n\n    const initialize = async () => {\n      await machineViewModel.getMachineList();\n      machineViewModel.setRenderRange();\n\n      machineViewModel.initializeSocket(\n        machineViewModel.onMessage,\n        machineViewModel.onOpen\n      );\n    };\n\n    initialize();\n\n    return () => {\n      clearInterval(interval);\n      if (machineViewModel.socket?.socket?.readyState === WebSocket.OPEN) {\n        machineViewModel.socket.disconnect();\n      }\n    };\n  }, []);\n\n  return (\n    <MonitoringContainer>\n      <Header.Wrap>\n        <Header.Menu icon={faBars} />\n        <Header.Time>\n          <span>{moment(time).format(\"YYYY-MM-DD\")}</span>\n          <span className=\"time\">{moment(time).format(\"HH:mm:ss\")}</span>\n        </Header.Time>\n      </Header.Wrap>\n      <Article.Wrap>\n        {machineViewModel.machines.map((machine: MachineDto, key: number) => {\n          const range = machineViewModel.setRenderRange();\n          if (range.start <= key && range.end > key)\n            return <Monitoring2Item data={machine} key={`machine_${key}`} />;\n        })}\n      </Article.Wrap>\n    </MonitoringContainer>\n  );\n}\n\nexport default inject(\"machineViewModel\")(observer(Monitoring2View));\n\nconst MonitoringContainer = styled.div`\n  background: #fff;\n  height: 100vh;\n`;\n\nconst Header = {\n  Wrap: styled.div`\n    display: flex;\n    align-items: center;\n    padding: 1.8vh 1.4vh;\n    position: relative;\n    background: #f4f4f5;\n    border-bottom: 1px solid #333333;\n  `,\n\n  Menu: styled(FontAwesomeIcon)`\n    font-size: 6vw;\n\n    @media screen and (min-width: 1080px) {\n      font-size: 40px;\n    }\n  `,\n\n  Time: styled.div`\n    position: absolute;\n    left: 50%;\n    transform: translate(-50%);\n    font-size: 6vw;\n    font-weight: 300;\n    display: flex;\n    gap: 24px;\n    justify-content: space-between;\n    color: #666666;\n    white-space: nowrap;\n\n    @media screen and (min-width: 1080px) {\n      font-size: 48px;\n      & span {\n        width: 260px;\n      }\n    }\n\n    & .time {\n      flex-shrink: 0;\n      // width: 27vw;\n      letter-spacing: 6px;\n      font-weight: 500;\n    }\n  `,\n};\n\nconst Article = { Wrap: styled.ul`` };\n","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/monitoring/mon3.tsx",["554"],[],"import { inject, observer } from \"mobx-react\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport BarofactorySquare from \"../../public/images/logo/barofactory-square\";\nimport MachineDto from \"../../src/dto/machine/machine.dto\";\nimport MachineViewModel from \"../../src/viewModels/machine/machine.viewModel\";\nimport MonitoringRow from \"../../components/table/monitoringRow\";\n\ninterface IProps {\n  machineViewModel: MachineViewModel;\n}\n\nfunction Monitoring3View(props: IProps) {\n  const machineViewModel = props.machineViewModel;\n  const [time, setTime] = useState<string>(\"\");\n\n  const getFormattedTime = () => {\n    return moment().format(\"YYYY.MM.DD HH:mm:ss\");\n  };\n\n  useEffect(() => {\n    setTime(getFormattedTime());\n    const interval = setInterval(() => {\n      setTime(getFormattedTime());\n    }, 1000);\n\n    const initialize = async () => {\n      await machineViewModel.getMachineList();\n\n      machineViewModel.initializeSocket(\n        machineViewModel.onMessage,\n        machineViewModel.onOpen\n      );\n    };\n\n    initialize();\n\n    return () => {\n      clearInterval(interval);\n      if (machineViewModel.socket?.socket?.readyState === WebSocket.OPEN) {\n        machineViewModel.socket.disconnect();\n      }\n    };\n  }, []);\n\n  return (\n    <MonitoringContainer>\n      <Header.Wrap>\n        <Header.LeftSide>\n          <BarofactorySquare color={\"#ffffff\"} />\n          <Header.Time>{time}</Header.Time>\n        </Header.LeftSide>\n        <Header.Title>전체공정현황</Header.Title>\n        <Header.Enterprise>{machineViewModel.auth.name}</Header.Enterprise>\n      </Header.Wrap>\n      <Article.Wrap>\n        <Article.Head>\n          <tr>\n            <th>호기</th>\n            <th className=\"align_left\">기계명</th>\n            <th className=\"align_left\">공정</th>\n            <th>진행률</th>\n            <th>완료/목표</th>\n            <th>공정 시작일</th>\n            <th>완료 예정일</th>\n            <th>실CT</th>\n            <th>구분</th>\n          </tr>\n        </Article.Head>\n        <Article.Body>\n          {machineViewModel.machines.map((data: MachineDto, key: number) => {\n            return (\n              <MonitoringRow data={data} key={`monitoring_table_row_${key}`} />\n            );\n          })}\n        </Article.Body>\n      </Article.Wrap>\n    </MonitoringContainer>\n  );\n}\n\nexport default inject(\"machineViewModel\")(observer(Monitoring3View));\n\nconst MonitoringContainer = styled.div`\n  background: #2e3257;\n  height: 100vh;\n  & * {\n    color: #fff;\n  }\n`;\n\nconst Header = {\n  Wrap: styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 64px;\n    padding: 0 16px;\n  `,\n  LeftSide: styled.div`\n    display: flex;\n    align-items: center;\n    height: 100%;\n    gap: 24px;\n  `,\n  Time: styled.p`\n    height: 34px;\n    font-size: 34px;\n  `,\n  Title: styled.p`\n    position: absolute;\n    left: 50%;\n    transform: translate(-50%);\n    font-size: 30px;\n    font-weight: 600;\n  `,\n  Enterprise: styled.p`\n    font-size: 28px;\n  `,\n};\n\nconst Article = {\n  Wrap: styled.table`\n    width: 100vw;\n    border-collapse: collapse;\n    & * {\n      white-space: nowrap;\n    }\n  `,\n  Head: styled.thead`\n    width: 100vw;\n    height: 36px;\n    text-align: center;\n    backgorund: #c4c4c4;\n    & th {\n      background: #c4c4c4;\n      min-width: 42px;\n    }\n\n    & .align_left {\n      padding-left: 8px;\n      text-align: left;\n    }\n\n    & * {\n      font-size: 17px;\n      font-weight: 600;\n      color: #000;\n    }\n  `,\n  Body: styled.tbody``,\n};\n","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/monitoring/setting.tsx",["555"],[],"import { inject, observer } from \"mobx-react\";\nimport PageContainer from \"../../components/container/pageContainer\";\nimport CardLayout from \"../../components/layout/cardLayout\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport MonitorViewModel from \"../../src/viewModels/monitor/monitor.viewModel\";\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DroppableProvided,\n  DraggableProvided,\n} from \"react-beautiful-dnd\";\nimport MonitorListDto from \"../../src/dto/monitor/monitorList.dto\";\nimport MonitorDto from \"../../src/dto/monitor/monitor.dto\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPenToSquare,\n  faPlus,\n  faXmark,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CircleButton from \"../../components/button/circleButton\";\n\ninterface IProps {\n  monitorViewModel: MonitorViewModel;\n}\n\nfunction MonitorSettingView(props: IProps) {\n  const monitorViewModel = props.monitorViewModel;\n  const [enabled, setEnabled] = useState(false);\n\n  useEffect(() => {\n    const animation = requestAnimationFrame(() => setEnabled(true));\n    monitorViewModel.getListMachine();\n    monitorViewModel.getList();\n\n    return () => {\n      cancelAnimationFrame(animation);\n      setEnabled(false);\n    };\n  }, []);\n\n  if (!enabled) {\n    return null;\n  }\n\n  const ButtonStyle = {\n    style: {\n      width: \"16px\",\n      height: \"16px\",\n    },\n    iconStyle: {\n      width: \"12px\",\n      height: \"12px\",\n    },\n  };\n\n  return (\n    <PageContainer>\n      <CardLayout style={{ height: \"100%\" }}>\n        <LayoutTitle>모니터링 관리</LayoutTitle>\n        <DragWrap>\n          {monitorViewModel.list.length > 0 && (\n            <DragMonitor.Wrap>\n              {monitorViewModel.list.map(\n                (monitor: MonitorListDto, key: number) => (\n                  <DragDropContext\n                    onDragEnd={monitorViewModel.handleDragEnd}\n                    key={`${monitor.name}_dragable_${key}`}\n                  >\n                    <Droppable droppableId={`${monitor.name}`}>\n                      {(provided: DroppableProvided) => (\n                        <DragMonitor.Monitor\n                          ref={provided.innerRef}\n                          {...provided.droppableProps}\n                        >\n                          <span>{monitor.name}</span>\n                          <DragMonitor.ButtonWrap className=\"monitor_button\">\n                            <CircleButton\n                              icon={faPenToSquare}\n                              onClick={\n                                monitorViewModel.handleClickModifyMonitor\n                              }\n                              value={monitor.id}\n                              {...ButtonStyle}\n                            />\n                            <CircleButton\n                              icon={faXmark}\n                              {...ButtonStyle}\n                              onClick={\n                                monitorViewModel.handleClickDeleteMonitor\n                              }\n                              value={monitor.id}\n                            />\n                          </DragMonitor.ButtonWrap>\n                          <DragMonitor.ItemWrap>\n                            {monitor.data.map((item: MonitorDto, index) => (\n                              <Draggable\n                                key={`${item.id}_${index}_${item.mid}`}\n                                draggableId={`${item.itemId}_index`}\n                                index={index}\n                              >\n                                {(provided: DraggableProvided) => (\n                                  <DragMonitor.Item\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                  >\n                                    <p>{item.machineNo}</p>\n                                    <h5>{item.mid}</h5>\n                                    <DragMonitor.ButtonWrap>\n                                      <CircleButton\n                                        icon={faPenToSquare}\n                                        {...ButtonStyle}\n                                        onClick={\n                                          monitorViewModel.handleClickModifyMachine\n                                        }\n                                        value={item.itemId}\n                                      />\n                                      <CircleButton\n                                        icon={faXmark}\n                                        {...ButtonStyle}\n                                        onClick={\n                                          monitorViewModel.handleClickDeleteMachine\n                                        }\n                                        value={item.itemId}\n                                      />\n                                    </DragMonitor.ButtonWrap>\n                                  </DragMonitor.Item>\n                                )}\n                              </Draggable>\n                            ))}\n                            {monitor.data.length < 4 && (\n                              <DragMonitor.Item\n                                className=\"add_item\"\n                                onClick={monitorViewModel.handleClickAddMachine}\n                                data-id={monitor.id}\n                                data-index={monitor.data.length + 1}\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                              >\n                                <FontAwesomeIcon icon={faPlus} />\n                              </DragMonitor.Item>\n                            )}\n                          </DragMonitor.ItemWrap>\n                          {provided.placeholder}\n                        </DragMonitor.Monitor>\n                      )}\n                    </Droppable>\n                  </DragDropContext>\n                )\n              )}\n              <DragMonitor.AddMonitor\n                onClick={monitorViewModel.handleClickAddMonitor}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </DragMonitor.AddMonitor>\n            </DragMonitor.Wrap>\n          )}\n        </DragWrap>\n      </CardLayout>\n    </PageContainer>\n  );\n}\n\nexport default inject(\"monitorViewModel\")(observer(MonitorSettingView));\n\nconst LayoutTitle = styled.h2`\n  width: 100%;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nconst DragWrap = styled.div`\n  width: 100%;\n`;\n\nconst DragMonitor = {\n  Wrap: styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 24px;\n  `,\n  Monitor: styled.div`\n    position: relative;\n    flex-shrink: 0;\n    background: #e1ebfc;\n    border-radius: 8px;\n    padding: 16px;\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    width: 18vw;\n    min-width: 180px;\n    height: 324px;\n    box-shadow: 0 2px 8px rgba(76, 78, 100, 0.22);\n\n    & span {\n      font-weight: 600;\n      font-size: 18px;\n    }\n  `,\n  ItemWrap: styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    border-radius: 8px;\n  `,\n  Item: styled.div`\n    position: relative;\n    height: 64px;\n    background: #fff;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 2px 8px rgba(76, 78, 100, 0.22);\n    z-index: 10;\n\n    & p {\n      position: absolute;\n      left: 16px;\n    }\n\n    &.add_item {\n      z-index: 9;\n      cursor: pointer;\n    }\n  `,\n  ButtonWrap: styled.div`\n    position: absolute;\n    display: flex;\n    gap: 4px;\n    right: 8px;\n    top: 8px;\n\n    font-size: 14px;\n    cursor: pointer;\n\n    &.monitor_button {\n      top: 16px;\n      right: 12px;\n    }\n  `,\n\n  AddMonitor: styled.div`\n    flex-shrink: 0;\n    background: #e5e5e5;\n    background: #e5e5e5;\n    border-radius: 8px;\n    width: 18vw;\n    min-width: 180px;\n    box-shadow: 0 2px 8px rgba(76, 78, 100, 0.22);\n    height: 350px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    font-size: 32px;\n\n    &:hover {\n      background: #d9d9d9;\n    }\n  `,\n};\n","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/my/index.tsx",["556"],[],"import { inject, observer } from \"mobx-react\";\nimport UserViewModel from \"../../src/viewModels/user/user.viewModel\";\nimport { MouseEvent, useEffect, useState } from \"react\";\nimport PageContainer from \"../../components/container/pageContainer\";\nimport CardLayout from \"../../components/layout/cardLayout\";\nimport styled from \"styled-components\";\nimport UserInfomation from \"../../components/user/userInformation\";\nimport DefaultButton from \"../../components/button/defaultButton\";\nimport DotList from \"../../components/list/DotList\";\nimport SwitchButton from \"../../components/button/switchButton\";\nimport DefaultInput from \"../../components/input/defaultInput\";\nimport DefaultBadge from \"../../components/badge/defaultBadge\";\nimport DefaultModal from \"../../components/modal/defaultModal\";\nimport PostCode from \"../../components/tools/postCode\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-regular-svg-icons\";\n\ninterface IProps {\n  userViewModel: UserViewModel;\n}\n\nfunction MyPageView(props: IProps) {\n  const userViewModel = props.userViewModel;\n  const [isViewPassword, setIsViewPassword] = useState<boolean>(false);\n  const [isOpenModifyModal, setIsOpenModifyModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    userViewModel.popAuth();\n    userViewModel.getMe();\n  }, []);\n\n  const handleClickOpenModifyModal = (event: MouseEvent<HTMLButtonElement>) => {\n    setIsOpenModifyModal(!isOpenModifyModal);\n  };\n\n  return (\n    <PageContainer\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        overflow: \"auto\",\n      }}\n    >\n      <CardWrap className=\"left\">\n        <CardLayout className=\"infomation\" style={{ alignItems: \"center\" }}>\n          <Profile.Image src={userViewModel.user.profileImage} />\n          <Profile.Name>{userViewModel.user.enterprise}</Profile.Name>\n          <UserInfomation data={userViewModel.user} />\n          <DefaultButton\n            title=\"수정하기\"\n            onClick={handleClickOpenModifyModal}\n            style={{ width: \"100px\", height: \"40px\", fontSize: \"14px\" }}\n          />\n        </CardLayout>\n        <CardLayout className=\"setup\">\n          <CardTitle>바로팩토리 설치 정보</CardTitle>\n          <DotList list={[\"엣지 1개\", \"모니터 3개\", \"생산관리 플랫폼\"]} />\n        </CardLayout>\n        <CardLayout className=\"contract\">\n          <CardTitle>계약정보</CardTitle>\n          <DefaultBadge title=\"베이직\" style={{ left: \"88px\", top: \"12px\" }} />\n          <DotList list={[\"계약일 : \", \"계약종료일 : \"]} />\n        </CardLayout>\n        <CardLayout className=\"message\">\n          <CardTitle>문자설정</CardTitle>\n          <SwitchButton\n            checked={userViewModel.smsChecked}\n            onChange={userViewModel.handleChangeSmsCheck}\n          />\n          <DotList\n            list={[\n              \"작업완료시, 관리자 연락처로 문자 메세지가 자동 발송됩니다.\",\n            ]}\n          />\n        </CardLayout>\n      </CardWrap>\n      <CardWrap className=\"right\">\n        <CardLayout className=\"account\">\n          <CardTitle>로그인 등록 계정관리</CardTitle>\n          <AccountWrap>\n            <DefaultInput\n              value={userViewModel.loginAccountModel.name}\n              onChange={userViewModel.handleChangeLoginAccount}\n              type=\"text\"\n              boxstyle={{ flexShrink: \"unset\", height: \"40px\" }}\n              placeholder=\"담당자 이름\"\n              style={{ height: \"24px\" }}\n              useLabel\n              name=\"admin_name\"\n            />\n\n            <DefaultInput\n              name=\"admin_phone\"\n              useLabel\n              value={userViewModel.loginAccountModel.phone}\n              onChange={userViewModel.handleChangeLoginAccount}\n              type=\"text\"\n              placeholder=\"계정전용 핸드폰 번호\"\n              boxstyle={{ flexShrink: \"unset\", height: \"40px\" }}\n              style={{ height: \"24px\" }}\n            />\n            <DefaultButton\n              title=\"변경하기\"\n              style={{\n                width: \"100px\",\n                height: \"40px\",\n                fontSize: \"14px\",\n                flexShrink: \"0\",\n              }}\n            />\n          </AccountWrap>\n        </CardLayout>\n        <CardLayout className=\"admin\">\n          <CardTitle>관리자 계정</CardTitle>\n          <SubTitle>아이디 변경</SubTitle>\n          <AccountWrap>\n            <DefaultInput\n              value={userViewModel.adminAccountModel.id}\n              onChange={userViewModel.handleChangeAdminAccount}\n              type=\"text\"\n              boxstyle={{ flexShrink: \"unset\", height: \"40px\" }}\n              placeholder=\"아아디\"\n              style={{ height: \"24px\" }}\n              name=\"admin_account_id\"\n              useLabel\n            />\n            <DefaultButton\n              title=\"변경하기\"\n              style={{\n                width: \"100px\",\n                height: \"40px\",\n                fontSize: \"14px\",\n                flexShrink: \"0\",\n              }}\n            />\n          </AccountWrap>\n          <SubTitle>비밀번호 변경</SubTitle>\n          <AccountWrap>\n            <DefaultInput\n              useLabel\n              value={userViewModel.adminAccountModel.password}\n              onChange={userViewModel.handleChangeAdminAccount}\n              type={\n                userViewModel.adminAccountModel.isViewPassword\n                  ? \"text\"\n                  : \"password\"\n              }\n              placeholder=\"비밀번호\"\n              boxstyle={{ flexShrink: \"unset\", height: \"40px\" }}\n              style={{ height: \"24px\" }}\n              name=\"admin_account_password\"\n              validState={userViewModel.adminAccountModel.passwordValid}\n              validText={\"최소 4자 이상으로 설정해 주세요.\"}\n            >\n              <FontAwesomeIcon\n                icon={\n                  userViewModel.adminAccountModel.isViewPassword\n                    ? faEye\n                    : faEyeSlash\n                }\n                className=\"view_password_icon\"\n                onClick={userViewModel.handleToggleViewPassword}\n                data-id={\"admin\"}\n              />\n            </DefaultInput>\n            <DefaultInput\n              useLabel\n              value={userViewModel.adminAccountModel.passwordCheck}\n              onChange={userViewModel.handleChangeAdminAccount}\n              type={\n                userViewModel.adminAccountModel.isViewPassword\n                  ? \"text\"\n                  : \"password\"\n              }\n              placeholder=\"비밀번호 확인\"\n              boxstyle={{ flexShrink: \"unset\", height: \"40px\" }}\n              style={{ height: \"24px\" }}\n              name=\"admin_account_passwordCheck\"\n              validState={userViewModel.adminAccountModel.passwordCheckValid}\n              validText={\"비밀번호를 한번 더 입력해주세요.\"}\n            >\n              <FontAwesomeIcon\n                icon={\n                  userViewModel.adminAccountModel.isViewPassword\n                    ? faEye\n                    : faEyeSlash\n                }\n                className=\"view_password_icon\"\n                onClick={userViewModel.handleToggleViewPassword}\n                data-id={\"admin\"}\n              />\n            </DefaultInput>\n            <DefaultButton\n              title=\"변경하기\"\n              style={{\n                width: \"100px\",\n                height: \"40px\",\n                fontSize: \"14px\",\n                flexShrink: \"0\",\n              }}\n            />\n          </AccountWrap>\n        </CardLayout>\n        <CardLayout className=\"monitor\">\n          <CardTitle>모니터 관리 계정</CardTitle>\n          <SubTitle>아이디 변경</SubTitle>\n          <AccountWrap>\n            <DefaultInput\n              value={userViewModel.monitorAccountModel.id}\n              onChange={userViewModel.handleChangeMonitorAccount}\n              type=\"text\"\n              boxstyle={{ flexShrink: \"unset\", height: \"40px\" }}\n              placeholder=\"아아디\"\n              style={{ height: \"24px\" }}\n              useLabel\n              name=\"monitoring_account_id\"\n            />\n            <DefaultButton\n              title=\"변경하기\"\n              style={{\n                width: \"100px\",\n                height: \"40px\",\n                fontSize: \"14px\",\n                flexShrink: \"0\",\n              }}\n            />\n          </AccountWrap>\n          <SubTitle>비밀번호 변경</SubTitle>\n          <AccountWrap>\n            <DefaultInput\n              useLabel\n              name=\"monitoring_account_password\"\n              value={userViewModel.monitorAccountModel.password}\n              onChange={userViewModel.handleChangeMonitorAccount}\n              type={\n                userViewModel.monitorAccountModel.isViewPassword\n                  ? \"text\"\n                  : \"password\"\n              }\n              placeholder=\"비밀번호\"\n              boxstyle={{ flexShrink: \"unset\", height: \"40px\" }}\n              style={{ height: \"24px\" }}\n              validState={userViewModel.monitorAccountModel.passwordValid}\n              validText={\"최소 4자 이상으로 설정해 주세요.\"}\n            >\n              <FontAwesomeIcon\n                icon={\n                  userViewModel.monitorAccountModel.isViewPassword\n                    ? faEye\n                    : faEyeSlash\n                }\n                className=\"view_password_icon\"\n                onClick={userViewModel.handleToggleViewPassword}\n                data-id={\"monitor\"}\n              />\n            </DefaultInput>\n            <DefaultInput\n              useLabel\n              name=\"monitoring_account_passwordCheck\"\n              value={userViewModel.monitorAccountModel.passwordCheck}\n              onChange={userViewModel.handleChangeMonitorAccount}\n              type={\n                userViewModel.monitorAccountModel.isViewPassword\n                  ? \"text\"\n                  : \"password\"\n              }\n              placeholder=\"비밀번호 확인\"\n              boxstyle={{ flexShrink: \"unset\", height: \"40px\" }}\n              style={{ height: \"24px\" }}\n              validState={userViewModel.monitorAccountModel.passwordCheckValid}\n              validText={\"비밀번호를 한번 더 입력해주세요.\"}\n            >\n              <FontAwesomeIcon\n                icon={\n                  userViewModel.monitorAccountModel.isViewPassword\n                    ? faEye\n                    : faEyeSlash\n                }\n                className=\"view_password_icon\"\n                onClick={userViewModel.handleToggleViewPassword}\n                data-id={\"monitor\"}\n              />\n            </DefaultInput>\n            <DefaultButton\n              title=\"변경하기\"\n              style={{\n                width: \"100px\",\n                height: \"40px\",\n                fontSize: \"14px\",\n                flexShrink: \"0\",\n              }}\n            />\n          </AccountWrap>\n        </CardLayout>\n      </CardWrap>\n      <DefaultModal\n        isActive={isOpenModifyModal}\n        onClick={handleClickOpenModifyModal}\n      >\n        <CardTitle style={{ fontSize: \"20px\" }}>청구서 정보 변경</CardTitle>\n        <InputWrap>\n          <DefaultInput\n            useLabel\n            name=\"company_name\"\n            value={userViewModel.billInformationModel.name}\n            onChange={userViewModel.handleChangeBillInfomation}\n            type=\"text\"\n            placeholder=\"회사명\"\n            boxstyle={{ flexShrink: \"unset\", height: \"48px\" }}\n            style={{ height: \"32px\" }}\n          />\n          <DefaultInput\n            useLabel\n            name=\"company_license\"\n            value={userViewModel.billInformationModel.license}\n            onChange={userViewModel.handleChangeBillInfomation}\n            type=\"text\"\n            placeholder=\"사업자번호\"\n            boxstyle={{ flexShrink: \"unset\", height: \"48px\" }}\n            style={{ height: \"32px\" }}\n          />\n          <DefaultInput\n            useLabel\n            name=\"company_president\"\n            value={userViewModel.billInformationModel.president}\n            onChange={userViewModel.handleChangeBillInfomation}\n            type=\"text\"\n            placeholder=\"대표자\"\n            boxstyle={{ flexShrink: \"unset\", height: \"48px\" }}\n            style={{ height: \"32px\" }}\n          />\n          <DefaultInput\n            useLabel\n            name=\"company_email\"\n            value={userViewModel.billInformationModel.email}\n            onChange={userViewModel.handleChangeBillInfomation}\n            type=\"text\"\n            placeholder=\"이메일\"\n            boxstyle={{ flexShrink: \"unset\", height: \"48px\" }}\n            style={{ height: \"32px\" }}\n          />\n          <DefaultInput\n            useLabel\n            name=\"company_contact\"\n            value={userViewModel.billInformationModel.contact}\n            onChange={userViewModel.handleChangeBillInfomation}\n            type=\"text\"\n            placeholder=\"회사 연락처\"\n            boxstyle={{ flexShrink: \"unset\", height: \"48px\" }}\n            style={{ height: \"32px\" }}\n          />\n          <DefaultInput\n            useLabel\n            name=\"company_zip\"\n            value={userViewModel.billInformationModel.zip}\n            type=\"text\"\n            placeholder=\"우편번호\"\n            boxstyle={{ flexShrink: \"unset\", height: \"48px\" }}\n            style={{ height: \"32px\" }}\n            readOnly\n            onClick={userViewModel.handleClickOpenAddressModal}\n          />\n          <DefaultInput\n            useLabel\n            name=\"company_address\"\n            value={userViewModel.billInformationModel.address}\n            type=\"text\"\n            placeholder=\"회사주소\"\n            boxstyle={{\n              flexShrink: \"unset\",\n              height: \"48px\",\n              gridColumn: \"1 / 3\",\n            }}\n            style={{ height: \"32px\" }}\n            readOnly\n            onClick={userViewModel.handleClickOpenAddressModal}\n          />\n        </InputWrap>\n        <ButtonWrap>\n          <DefaultButton\n            title=\"취소\"\n            style={{ width: \"120px\", color: \"#000\" }}\n            activeColor=\"#fff\"\n            onClick={handleClickOpenModifyModal}\n          />\n          <DefaultButton\n            title=\"변경\"\n            style={{ width: \"120px\" }}\n            dynamic\n            disableColor=\"#d9d9d9\"\n            isActive={false}\n          />\n        </ButtonWrap>\n      </DefaultModal>\n      <DefaultModal\n        onClick={userViewModel.handleClickOpenAddressModal}\n        isActive={userViewModel.isOpenAddress}\n        style={{ width: \"635px\", height: \"448px\" }}\n      >\n        <PostCode\n          setData={userViewModel.setSearchAddress}\n          isOpen={userViewModel.isOpenAddress}\n        />\n      </DefaultModal>\n    </PageContainer>\n  );\n}\n\nexport default inject(\"userViewModel\")(observer(MyPageView));\n\nconst CardWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  flex-shrink: 0;\n  margin-bottom: 16px;\n  height: max-content;\n\n  &.left {\n    width: 30vw;\n    min-width: 186px;\n  }\n\n  &.right {\n    width: 60vw;\n    min-width: 380px;\n  }\n\n  & .infomation {\n    padding-top: 48px;\n  }\n`;\n\nconst CardTitle = styled.h4`\n  margin-bottom: 16px;\n`;\n\nconst SubTitle = styled.h5`\n  margin-top: 8px;\n`;\n\nconst Profile = {\n  Image: styled.img`\n    width: 120px;\n    height: 120px;\n    object-fit: cover;\n    border-radius: 8px;\n  `,\n  Name: styled.h4`\n    font-weight: 600;\n    font-size: 20px;\n    line-height: 2;\n  `,\n};\n\nconst AccountWrap = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst InputWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 24px;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst ButtonWrap = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n`;\n","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/production/record.tsx",["557"],[],"import { useEffect, useRef } from \"react\";\nimport PageContainer from \"../../components/container/pageContainer\";\nimport { inject, observer } from \"mobx-react\";\nimport styled from \"styled-components\";\nimport RecordViewModel from \"../../src/viewModels/record/record.viewModel\";\nimport RangeDatePickHeader from \"../../components/header/rangeDatePickHeader\";\nimport DefaultButton from \"../../components/button/defaultButton\";\nimport ExcelIcon from \"../../public/images/icons/excel\";\nimport DefaultTable from \"../../components/table/defaultTable\";\nimport excelModule from \"../../src/modules/excel.module\";\n\ninterface IProps {\n  recordViewModel: RecordViewModel;\n}\n\nfunction RecordView(props: IProps) {\n  const recordViewModel = props.recordViewModel;\n  const tableRef = useRef(null);\n\n  useEffect(() => {\n    recordViewModel.getList();\n    return () => {};\n  }, []);\n\n  const handleDownloadExcel = () => {\n    excelModule.tableToDownload({\n      targetRef: tableRef,\n      fileName: \"productionRecord\",\n      fileType: \"xlsx\",\n      sheetName: `${recordViewModel.recordModel.startDay} ~ ${recordViewModel.recordModel.endDay}`,\n      columnWidth: { A: 24, B: 48, C: 24 },\n    });\n  };\n\n  return (\n    <PageContainer style={{ gap: \"16px\" }}>\n      <RangeDatePickHeader\n        start={recordViewModel.recordModel.startDay}\n        end={recordViewModel.recordModel.endDay}\n        onChange={recordViewModel.handleChangeDay}\n        title=\"생산이력\"\n      >\n        <DefaultButton\n          title={\n            <ButtonText>\n              <ExcelIcon size={18} />\n              다운로드\n            </ButtonText>\n          }\n          onClick={handleDownloadExcel}\n          style={{\n            width: \"auto\",\n            padding: \"0 8px\",\n            border: \"0\",\n            color: \"#000\",\n            fontSize: \"16px\",\n          }}\n          activeColor=\"#E0E0E0\"\n        />\n      </RangeDatePickHeader>\n      <TableLayout>\n        <TablePadding>\n          <DefaultTable\n            header={recordViewModel.tableHeader}\n            data={recordViewModel.list}\n            recordRef={tableRef}\n          />\n        </TablePadding>\n      </TableLayout>\n    </PageContainer>\n  );\n}\n\nexport default inject(\"recordViewModel\")(observer(RecordView));\n\nconst ButtonText = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst TableLayout = styled.section`\n  overflow: hidden;\n  background: #fff;\n  padding: 16px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(76, 78, 100, 0.22);\n`;\n\nconst TablePadding = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  overflow: auto;\n`;\n","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/production/report.tsx",["558"],[],"import { useEffect } from \"react\";\nimport PageContainer from \"../../components/container/pageContainer\";\nimport SingleDatePickHeader from \"../../components/header/singleDatePickHeader\";\nimport { inject, observer } from \"mobx-react\";\nimport ReportViewModel from \"../../src/viewModels/report/report.viewModel\";\nimport ProductDto from \"../../src/dto/report/product.dto\";\nimport styled from \"styled-components\";\nimport ReportCard from \"../../components/machine/reportCard\";\nimport Selector from \"../../components/input/selector\";\nimport SelectorOption from \"../../components/input/selectorOption\";\nimport Masonry from \"react-masonry-css\";\n\ninterface IProps {\n  reportViewModel: ReportViewModel;\n}\n\nfunction ReportView(props: IProps) {\n  const reportViewModel = props.reportViewModel;\n\n  const breakPointColsObject = {\n    default: 3,\n    1440: 2,\n    820: 1,\n  };\n\n  useEffect(() => {\n    reportViewModel.InsertProductList();\n\n    return () => {\n      reportViewModel.dataReset();\n    };\n  }, []);\n\n  return (\n    <PageContainer style={{ gap: \"16px\", overflow: \"auto\" }}>\n      <SingleDatePickHeader\n        value={reportViewModel.productModel.day}\n        onChange={reportViewModel.handleChangeDay}\n        onClick={reportViewModel.handleClickDay}\n      >\n        <Selector\n          onChange={reportViewModel.handleChangeFilter}\n          style={{\n            backgroundImage: `linear-gradient(45deg, transparent 50%, gray 50%),\n    linear-gradient(135deg, gray 50%, transparent 50%)`,\n            backgroundPosition: `calc(100% - 20px) calc(1em + 2px),\n    calc(100% - 12px) calc(1em + 2px), calc(100% - 2.5em) 0.5em`,\n            width: \"182px\",\n            height: \"42px\",\n          }}\n        >\n          <>\n            <SelectorOption title=\"전체보기\" value={0} selected />\n            {reportViewModel.products.map(\n              (product: ProductDto, key: number) => {\n                return (\n                  <SelectorOption\n                    key={`filter_options_${product.name}_${key}`}\n                    title={`${product.machineNo}. ${product.name}`}\n                    value={product.machineNo}\n                  />\n                );\n              }\n            )}\n          </>\n        </Selector>\n      </SingleDatePickHeader>\n      {reportViewModel.lotList && (\n        <ReportCardWrap\n          breakpointCols={breakPointColsObject}\n          className=\"report_cards_grid\"\n          columnClassName=\"report_cards_column_grid\"\n        >\n          {reportViewModel.products.map((product: ProductDto, key: number) => {\n            const isFiltered =\n              reportViewModel.filterTarget === 0\n                ? false\n                : reportViewModel.filterTarget !== +product.machineNo\n                ? true\n                : false;\n\n            if (!isFiltered)\n              return (\n                <ReportCard\n                  data={product}\n                  lot={reportViewModel.lotList[product.machineNo]}\n                  onClickLotToggle={reportViewModel.handleClickLotToggle}\n                  active={product.toggle}\n                  key={`report_card_${product.name}_${key}`}\n                />\n              );\n          })}\n        </ReportCardWrap>\n      )}\n    </PageContainer>\n  );\n}\n\nexport default inject(\"reportViewModel\")(observer(ReportView));\n\nconst ReportCardWrap = styled(Masonry)`\n  display: flex;\n  gap: 16px;\n`;\n","/Users/jangjunsu/Documents/practice/baro-next/resource/pages/work/program.tsx",["559"],[],"import { inject, observer } from \"mobx-react\";\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport PageContainer from \"../../components/container/pageContainer\";\nimport ProgramViewModel from \"../../src/viewModels/program/program.viewModel\";\nimport ProgramDto from \"../../src/dto/program/program.dto\";\nimport styled from \"styled-components\";\nimport CardLayout from \"../../components/layout/cardLayout\";\nimport MachineButton from \"../../components/button/machineButton\";\nimport ActiveBadge from \"../../components/badge/activeBadge\";\nimport DefaultButton from \"../../components/button/defaultButton\";\nimport SingleDatePickHeader from \"../../components/header/singleDatePickHeader\";\nimport NcCode from \"../../components/program/ncCode\";\n\ninterface IProps {\n  programViewModel: ProgramViewModel;\n}\n\nfunction ProgramView(props: IProps) {\n  const programViewModel = props.programViewModel;\n\n  useEffect(() => {\n    const initialize = async () => {\n      await programViewModel.initializeSocket(\n        programViewModel.onMessage,\n        programViewModel.onOpen\n      );\n    };\n\n    initialize();\n\n    return () => {\n      if (programViewModel.socket?.socket?.readyState === WebSocket.OPEN) {\n        programViewModel.socket.disconnect();\n      }\n    };\n  }, []);\n\n  return (\n    <PageContainer>\n      <FlexLayout>\n        <CardLayout\n          style={{\n            width: \"100%\",\n            maxWidth: \"300px\",\n            overflow: \"auto\",\n            gap: \"16px\",\n            padding: \"0px\",\n          }}\n        >\n          <LayoutTitle>\n            <DefaultButton\n              title={\"전체코드\"}\n              dynamic\n              isActive={programViewModel.activeComponent === 0}\n              style={{ width: \"104px\", marginLeft: \"16px\" }}\n              onClick={programViewModel.handleClickActiveComponent}\n              alwaysHandling\n              value={0}\n            />\n            <DefaultButton\n              title={\"날짜별코드\"}\n              dynamic\n              isActive={programViewModel.activeComponent === 1}\n              style={{ width: \"104px\", marginRight: \"16px\" }}\n              onClick={programViewModel.handleClickActiveComponent}\n              alwaysHandling\n              value={1}\n            />\n          </LayoutTitle>\n          <ButtonWrap style={{ gap: \"16px\" }}>\n            {programViewModel.activeMachineList.map(\n              (machine: ProgramDto, key: number) => {\n                const isActive =\n                  programViewModel.activeComponent === 1\n                    ? true\n                    : machine.status === \"on\"\n                    ? true\n                    : false;\n                return (\n                  <MachineButton\n                    key={`active_machine_${key}`}\n                    title={\n                      <>\n                        <p>{machine.machineNo}</p>\n                        <span>{machine.name}</span>\n                        <ActiveBadge isActive={isActive} />\n                      </>\n                    }\n                    onClick={programViewModel.handleClickMachine}\n                    value={machine.machineNo}\n                    isActive={isActive}\n                    highlight={\n                      +machine.machineNo ===\n                      programViewModel.activeTarget.machine\n                    }\n                    dynamic\n                  />\n                );\n              }\n            )}\n          </ButtonWrap>\n        </CardLayout>\n        {programViewModel.activeComponent === 0 ? (\n          <NcCode\n            isAllComponent={true}\n            isLoading={programViewModel.isLoading}\n            activeTarget={programViewModel.activeTarget}\n            handleClickFunction={programViewModel.handleClickFunction}\n            activeCallfunc={programViewModel.activeCallfunc}\n            handleClickDownloadText={programViewModel.handleClickDownloadText}\n            activeCode={programViewModel.activeCode}\n          />\n        ) : (\n          <DateCodeWrap>\n            <SingleDatePickHeader\n              value={programViewModel.targetDate}\n              onClick={programViewModel.handleClickDay}\n              onChange={programViewModel.handleChangeDay}\n              style={{ position: \"relative\", gridColumn: \"1/3\" }}\n            />\n            <NcCode\n              isAllComponent={false}\n              isLoading={programViewModel.isLoading}\n              activeTarget={programViewModel.activeTarget}\n              handleClickFunction={programViewModel.handleClickFunction}\n              activeCallfunc={programViewModel.activeCallfunc}\n              handleClickDownloadText={programViewModel.handleClickDownloadText}\n              activeCode={programViewModel.activeCode}\n            />\n          </DateCodeWrap>\n        )}\n      </FlexLayout>\n    </PageContainer>\n  );\n}\n\nexport default inject(\"programViewModel\")(observer(ProgramView));\n\nconst FlexLayout = styled.div`\n  display: flex;\n  gap: 16px;\n  height: 100%;\n`;\n\nconst LayoutTitle = styled.div`\n  z-index: 11;\n  background: #fff;\n  font-weight: 500;\n  line-height: 24px;\n  font-size: 20px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #d9d9d9;\n  position: sticky;\n  top: 0px;\n  height: 24px;\n  padding: 16px 16px;\n  flex-shrink: 0;\n`;\n\nconst ButtonWrap = styled.div`\n  padding: 0 16px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DateCodeWrap = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 70px 1fr;\n  gap: 16px;\n`;\n","/Users/jangjunsu/Documents/practice/baro-next/resource/components/badge/activeBadge.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/badge/defaultBadge.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/badge/informationBadge.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/badge/workEnvironmentBadge.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/button/angleButton.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/button/circleButton.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/button/defaultButton.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/button/machineButton.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/button/switchButton.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/chart/lotBarChart.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/container/pageContainer.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/datePicker/defaultDatePicker.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/datePicker/rangeDatePicker.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/header/header.tsx",["560"],[],"import { faBell } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SquareLogo from \"public/images/logo/barofactory-square.svg\";\nimport styled from \"styled-components\";\nimport MainViewModel from \"../../src/viewModels/main/main.viewModel\";\nimport MenuModel from \"../../src/models/menu/menu.model\";\nimport { NextRouter, useRouter } from \"next/router\";\nimport SubMenuModel from \"../../src/models/menu/subMenu.model\";\nimport { useEffect, useState } from \"react\";\nimport Logo from \"../image/logo\";\nimport WorkEnvironmentBadge from \"../badge/workEnvironmentBadge\";\nimport { inject, observer } from \"mobx-react\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport AlarmModal from \"../modal/alarmModal\";\nimport UserModal from \"../modal/userModal\";\nimport Linker from \"../linker/linker\";\nimport pageUrlConfig from \"../../config/pageUrlConfig\";\nimport authModule from \"../../src/modules/auth.module\";\nimport CircleButton from \"../button/circleButton\";\n\ninterface IProps {\n  mainViewModel: MainViewModel;\n}\n\nfunction Header(props: IProps) {\n  const mainViewModel: MainViewModel = props.mainViewModel;\n  const [hover, setHover] = useState(\"\");\n  const [isOpenAlarmModal, setIsOpenAlarmModal] = useState<boolean>(false);\n  const [isOpenUserModal, setIsOpenUserModal] = useState<boolean>(false);\n  const router: NextRouter = useRouter();\n\n  useEffect(() => {\n    if (!authModule.isLogin()) {\n      router.push(pageUrlConfig.login);\n    }\n  }, []);\n\n  const handleToggleAlarmModal = () => {\n    setIsOpenAlarmModal(!isOpenAlarmModal);\n  };\n\n  const handleToggleUserModal = () => {\n    setIsOpenUserModal(!isOpenUserModal);\n  };\n\n  return (\n    <HeaderContainer>\n      <Head.Wrap>\n        <Linker href={\"/\"} boxStyle={{ width: \"fit-content\" }}>\n          <Head.Company>\n            <Logo src={SquareLogo.src} alt=\"BAROFACTORY | 바로팩토리\" />\n            <p>{mainViewModel.auth.name}</p>\n          </Head.Company>\n        </Linker>\n        <WorkEnvironmentBadge title={process.env.NEXT_PUBLIC_APP_MARK} />\n        <Head.User>\n          <CircleButton icon={faBell} onClick={handleToggleAlarmModal}>\n            <Head.Alarm>{mainViewModel.alarm.unRead}</Head.Alarm>\n          </CircleButton>\n          <Head.Profile\n            src={mainViewModel.auth.profileImage}\n            alt=\"profile\"\n            onClick={handleToggleUserModal}\n          />\n        </Head.User>\n      </Head.Wrap>\n      <Navi.Wrap>\n        <Navi.MenuWrap>\n          {mainViewModel.menus.map((item: MenuModel, key: number) => {\n            let isActive =\n              item.path === \"/\"\n                ? router.asPath === \"/\"\n                : router.asPath.includes(item.path);\n\n            return (\n              <Navi.MenuItem\n                key={key}\n                className={\n                  isActive ? \"active\" : hover === item.name ? \"active\" : \"\"\n                }\n                isMain={item.path === \"/\"}\n              >\n                <Linker\n                  href={item.subMenu.length < 1 ? item.path : \"\"}\n                  onMouseEnter={() => setHover(item.name)}\n                  onMouseLeave={() => setHover(\"\")}\n                >\n                  <div>\n                    <FontAwesomeIcon icon={item.icon} />\n                    <p>{item.title}</p>\n                  </div>\n                </Linker>\n                {item.subMenu.length > 0 && (\n                  <>\n                    <Navi.DropDownIcon icon={faAngleDown} />\n                    <Navi.MenuModal\n                      onMouseEnter={() => setHover(item.name)}\n                      onMouseLeave={() => setHover(\"\")}\n                    >\n                      <Navi.SubMenu\n                        className={hover === item.name ? \"active\" : \"\"}\n                        count={item.subMenu.length}\n                      >\n                        {item.subMenu.map((sub: SubMenuModel, key) => {\n                          return (\n                            <li key={`sub_menu_${key}`}>\n                              <Linker href={sub.path}>{sub.title}</Linker>\n                            </li>\n                          );\n                        })}\n                      </Navi.SubMenu>\n                    </Navi.MenuModal>\n                  </>\n                )}\n              </Navi.MenuItem>\n            );\n          })}\n        </Navi.MenuWrap>\n      </Navi.Wrap>\n      {mainViewModel.auth.enterpriseId && (\n        <>\n          <AlarmModal\n            onClick={handleToggleAlarmModal}\n            active={isOpenAlarmModal}\n            list={mainViewModel.alarm.alarms}\n            count={mainViewModel.alarm.unRead}\n          />\n          <UserModal\n            onClick={handleToggleUserModal}\n            onClickLogout={mainViewModel.insertLogout}\n            active={isOpenUserModal}\n            data={mainViewModel.auth}\n            menus={mainViewModel.userMenu}\n            alarm={mainViewModel.alarm.unRead}\n          />\n        </>\n      )}\n    </HeaderContainer>\n  );\n}\n\nexport default inject(\"mainViewModel\")(observer(Header));\n\nconst HeaderContainer = styled.header`\n  position: relative;\n  z-index: 999;\n  width: 100%;\n  min-width: 604px;\n  height: 128px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 2px 8px rgba(76, 78, 100, 0.22);\n`;\n\nconst Head = {\n  Wrap: styled.div`\n    flex-shrink: 0;\n    display: flex;\n    justify-content: space-between;\n    padding: 0 24px;\n    height: 64px;\n    align-items: center;\n    border-bottom: 1px solid #eaeaec;\n  `,\n  Company: styled.div`\n    display: flex;\n    align-items: center;\n    gap: 16px;\n\n    font-size: 24px;\n    line-height: 1;\n    white-space: nowrap;\n    cursor: pointer;\n  `,\n\n  User: styled.div`\n    display: flex;\n    align-items: center;\n    gap: 12px;\n  `,\n\n  Alarm: styled.div`\n    position: absolute;\n    right: 0px;\n    top: 0px;\n    background: red;\n    border-radius: 50%;\n    width: 18px;\n    height: 18px;\n    color: #fff;\n    font-size: 12px;\n    font-weight: 300;\n    line-height: 18px;\n  `,\n  Profile: styled.img`\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    cursor: pointer;\n  `,\n};\n\nconst Navi = {\n  Wrap: styled.nav`\n    padding: 0 24px;\n    flex-shrink: 0;\n  `,\n  MenuWrap: styled.div`\n    height: 64px;\n    display: flex;\n    align-items: center;\n    gap: 12px;\n  `,\n  MenuItem: styled.div<{ isMain?: boolean }>`\n    flex-shrink: 0;\n    position: relative;\n    width: ${({ isMain }) => (isMain ? \"108px\" : \"140px\")};\n    height: 47px;\n    padding: 0px;\n    white-space: nowrap;\n    cursor: pointer;\n\n    & p {\n      padding-top: 4px;\n      font-weight: 400;\n      font-size: 18px;\n      line-height: 1.5;\n    }\n    & div {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      height: 100%;\n    }\n    & svg {\n      padding-left: 12px;\n      width: 24px;\n      height: 24px;\n    }\n    &.active {\n      background: #3a79ec;\n      border-radius: 8px;\n      box-shadow: 0px 2px 6px rgba(76, 78, 100, 0.42);\n      & p,\n      path {\n        color: white;\n      }\n    }\n  `,\n  SubMenu: styled.ul<{ count: number }>`\n    position: absolute;\n    margin-top: 18px;\n    top: 0px;\n    left: 0px;\n    display: flex;\n    flex-direction: column;\n    border-radius: 8px;\n    background: #fff;\n    box-shadow: 0 2px 8px rgba(76, 78, 100, 0.22);\n    width: 140px;\n    overflow: hidden;\n    font-size: 16px;\n    height: 0px !important;\n    transition: all 0.4s ease;\n\n    &.active {\n      height: ${({ count }) => count * 44}px !important;\n      top: 16px;\n    }\n\n    & li {\n      padding: 6px;\n\n      & a {\n        padding: 6px;\n      }\n\n      &:hover {\n        background: #f5f5f5;\n      }\n    }\n  `,\n  MenuModal: styled.div`\n    position: absolute;\n    top: 16px;\n    left: 0px;\n    width: 100%;\n    height: 100% !important;\n  `,\n  DropDownIcon: styled(FontAwesomeIcon)`\n    position: absolute;\n    top: 50%;\n    right: 12px;\n\n    width: 16px !important;\n    height: 16px !important;\n\n    transform: translate(0, -50%);\n  `,\n};\n","/Users/jangjunsu/Documents/practice/baro-next/resource/components/header/rangeDatePickHeader.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/header/singleDatePickHeader.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/image/logo.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/indicator/defaultLoding.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/indicator/loadingIndicator.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/input/checkbox.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/input/defaultInput.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/input/selector.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/input/selectorOption.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/layout/cardLayout.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/linker/linker.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/list/DotList.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/machine/DoneSoonList.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/machine/Monitoring2Item.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/machine/RealTimeMachineItem.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/machine/reportCard.tsx",["561"],[],"import styled from \"styled-components\";\nimport ProductDto from \"../../src/dto/report/product.dto\";\nimport { ILotData } from \"../../src/viewModels/report/report.viewModel\";\nimport ProductDataDto from \"../../src/dto/report/productData.dto\";\nimport DefaultButton from \"../button/defaultButton\";\nimport timeModule from \"../../src/modules/time.module\";\nimport InformationBadge from \"../badge/informationBadge\";\nimport ProgressBar from \"../progress/progressBar\";\nimport BarChart from \"../chart/lotBarChart\";\nimport { MouseEventHandler, useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBuildingCircleXmark,\n  faGear,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CardLayout from \"../layout/cardLayout\";\n\ninterface IProps {\n  data: ProductDto;\n  lot: ILotData;\n  active: number;\n  onClickLotToggle: MouseEventHandler;\n}\n\nexport default function ReportCard({\n  data,\n  lot,\n  active,\n  onClickLotToggle,\n}: IProps) {\n  const [notWorkTime, setNotWorkTime] = useState<number>(0);\n\n  useEffect(() => {\n    setNotWorkTime(\n      timeModule.getTimeDifferenceInMs(\n        data.data[active].start,\n        data.data[active].end\n      ) - data.data[active].total\n    );\n  }, [active]);\n\n  return (\n    <Container>\n      <Title.Wrap>\n        <Title.MachineNumber>{data.machineNo}</Title.MachineNumber>\n        <Title.MachineName>{data.name}</Title.MachineName>\n      </Title.Wrap>\n      <CardLayout>\n        <LayoutTitle>오늘의 조업시간</LayoutTitle>\n        <p>{`시작시간 : ${data.data[0].start}`}</p>\n        <p>{`종료시간 : ${data.data[data.data.length - 1].end}`}</p>\n      </CardLayout>\n      <CardLayout>\n        <LayoutTitle>LOT 변경</LayoutTitle>\n        <>\n          {data.data.map((settingData: ProductDataDto, key: number) => {\n            const isNotFirst = key !== 0;\n            return (\n              <div key={`lot_item_${key}`}>\n                {isNotFirst && (\n                  <LotChange.Item className=\"is_not_first\">\n                    <LotChange.Program>세팅변경 시간</LotChange.Program>\n                    <LotChange.Time>{`${data.data[key - 1].end} ~ ${\n                      settingData.start\n                    }`}</LotChange.Time>\n                  </LotChange.Item>\n                )}\n                <LotChange.Item>\n                  <LotChange.Program>{settingData.program}</LotChange.Program>\n                  <LotChange.Time>{`${settingData.start} ~ ${settingData.end}`}</LotChange.Time>\n                </LotChange.Item>\n              </div>\n            );\n          })}\n        </>\n      </CardLayout>\n      <CardLayout>\n        <ManageCycleTime.ButtonWrap>\n          {data.data.map((settingData: ProductDataDto, key: number) => {\n            console.log(active, key, active === key);\n            return (\n              <DefaultButton\n                title={settingData.program.split(\"(\")[0]}\n                onClick={onClickLotToggle}\n                dataId={data.machineNo}\n                value={key}\n                isActive={+active === key}\n                dynamic\n                alwaysHandling={true}\n                key={`program_data_button_${key}`}\n                style={{\n                  width: \"80px\",\n                  height: \"38px\",\n                  fontSize: \"14px\",\n                  fontWeight: \"500\",\n                }}\n                activeColor=\"#3A79EC\"\n                disableColor=\"#63657860\"\n              />\n            );\n          })}\n        </ManageCycleTime.ButtonWrap>\n        <ManageCycleTime.CycleMonitor>\n          <div>\n            <ManageCycleTime.Time>\n              {timeModule.secToMMSS(\n                data.data[active].active + data.data[active].idle\n              )}\n            </ManageCycleTime.Time>\n            <ManageCycleTime.Title>실 Cycle Time</ManageCycleTime.Title>\n          </div>\n          <ManageCycleTime.BadgeWrap>\n            <InformationBadge title=\"표준시간\" desc=\"00:02:01\" />\n            <InformationBadge title=\"성취율\" desc=\"97%\" />\n          </ManageCycleTime.BadgeWrap>\n        </ManageCycleTime.CycleMonitor>\n        <ManageCycleTime.OperationCount>\n          <ManageCycleTime.Title>가공개수</ManageCycleTime.Title>\n          <ManageCycleTime.Title>\n            {`${data.data[active].count} / ${data.data[active].plan}`}\n          </ManageCycleTime.Title>\n          <ProgressBar\n            value={(data.data[active].count / data.data[active].plan) * 100}\n          />\n          <ManageCycleTime.DoneTime>\n            가공완료 예정시간 : 0000\n          </ManageCycleTime.DoneTime>\n          <ManageCycleTime.AverageItem className=\"production_time\">\n            <p>평균단품 가공</p>\n            <p>{timeModule.secToMMSS(data.data[active].active)}</p>\n          </ManageCycleTime.AverageItem>\n          <ManageCycleTime.AverageItem>\n            <p>평균교체 준비</p>\n            <p>{timeModule.secToMMSS(data.data[active].idle)}</p>\n          </ManageCycleTime.AverageItem>\n        </ManageCycleTime.OperationCount>\n      </CardLayout>\n      <CardLayout>\n        {lot && (\n          <BarChart\n            data={lot[data.data[active].lot]}\n            averageLotTime={data.data[active].idle}\n          />\n        )}\n        <ProgressBar\n          value={\n            Math.round(\n              (data.data[active].total /\n                (data.data[active].total + notWorkTime)) *\n                10000\n            ) / 100\n          }\n          baseColor=\"red\"\n        />\n        <Graph.PercentWrap>\n          <div>\n            <div>\n              <Graph.MachineWorkIcon icon={faGear} className=\"work\" />\n              <p>가동시간</p>\n            </div>\n            <Graph.Percent className=\"work\">\n              {`${\n                Math.round(\n                  (data.data[active].total /\n                    (data.data[active].total + notWorkTime)) *\n                    10000\n                ) / 100\n              }%`}\n            </Graph.Percent>\n            <Graph.Time>\n              {timeModule.msToHHMM(data.data[active].total)}\n            </Graph.Time>\n          </div>\n          <Graph.VersusWrap>\n            <p>vs</p>\n          </Graph.VersusWrap>\n          <div>\n            <div>\n              <Graph.MachineWorkIcon\n                icon={faBuildingCircleXmark}\n                className=\"not_work\"\n              />\n              <p>비가동시간</p>\n            </div>\n            <Graph.Percent className=\"not_work\">\n              {`${\n                Math.round(\n                  (notWorkTime / (data.data[active].total + notWorkTime)) *\n                    10000\n                ) / 100\n              }%`}\n            </Graph.Percent>\n            <Graph.Time>{timeModule.msToHHMM(notWorkTime)}</Graph.Time>\n          </div>\n        </Graph.PercentWrap>\n      </CardLayout>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  padding: 8px;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(76, 78, 100, 0.22);\n  transition: all 0.4s ease;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  height: fit-content;\n  margin-bottom: 16px;\n`;\n\nconst LayoutTitle = styled.h4`\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nconst Title = {\n  Wrap: styled.div`\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  `,\n  MachineNumber: styled.p`\n    width: 32px;\n    height: 32px;\n    background: #6ebd33;\n    color: #fff;\n    font-weight: 600;\n    font-size: 20px;\n    line-height: 32px;\n    text-align: center;\n    border-radius: 4px;\n  `,\n  MachineName: styled.p`\n    padding-top: 6px;\n    font-size: 28px;\n    font-weight: 600;\n    line-height: 32px;\n  `,\n};\n\nconst LotChange = {\n  Item: styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: -4px;\n    padding-bottom: 8px;\n    border-bottom: 1px solid #eaeaec;\n    & * {\n      color: #4c4e64;\n      word-break: break-word;\n    }\n\n    &.is_not_first {\n      margin-bottom: 16px;\n    }\n  `,\n  Program: styled.p`\n    font-weight: 400;\n    font-size: 14px;\n    width: 100%;\n    letter-spacing: 0.6px;\n  `,\n  Time: styled.p`\n    width: 100%;\n    font-weight: 400;\n    font-size: 14px;\n    text-align: right;\n  `,\n};\n\nconst ManageCycleTime = {\n  ButtonWrap: styled.div`\n    display: flex;\n    gap: 12px;\n  `,\n  CycleMonitor: styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  `,\n  Time: styled.p`\n    font-size: 40px;\n    font-weight: 600 !important;\n    line-height: 1;\n  `,\n  Title: styled.p`\n    font-size: 16px;\n    font-weight: 700 !important;\n    line-height: 1;\n  `,\n  BadgeWrap: styled.div`\n    display: flex;\n    gap: 8px;\n  `,\n  OperationCount: styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  `,\n  DoneTime: styled.p`\n    padding: 8px 0;\n    font-size: 14px;\n    font-weight: 400;\n    color: #4c4e64;\n  `,\n  AverageItem: styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid #eaeaec;\n    padding: 8px 0;\n    & p {\n      font-weight: 400;\n      font-size: 14px;\n      color: #4c4e64;\n    }\n\n    &.production_time {\n      border-top: 1px solid #eaeaec;\n    }\n  `,\n};\n\nconst Graph = {\n  PercentWrap: styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    & > div {\n      display: flex;\n      flex-direction: column;\n\n      & > div {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        font-size: 14px;\n        font-weight: 400 !important;\n        color: #4c4e64 !important;\n        margin-bottom: 8px;\n      }\n    }\n\n    & > div:first-child {\n      align-items: start;\n    }\n\n    & > div:last-child {\n      align-items: end;\n    }\n  `,\n  MachineWorkIcon: styled(FontAwesomeIcon)`\n    width: 16px;\n    height: 16px;\n    padding: 6px;\n    display: flex;\n    align-itmes: center;\n    justify-content: center;\n    border-radius: 4px;\n    &.work {\n      & path {\n        fill: rgba(58, 121, 236, 100);\n      }\n      background: rgb(225 236 255);\n    }\n    &.not_work {\n      & path {\n        fill: rgba(255, 58, 58, 54);\n      }\n      background: rgb(255 236 236);\n    }\n  `,\n  Percent: styled.p`\n    font-size: 20px;\n    &.work {\n      color: #3a79ec;\n    }\n    &.not_work {\n      color: #ff4d49;\n    }\n  `,\n  Time: styled.p`\n    font-weight: 400;\n    font-size: 12px;\n    color: #4c4e64 !important;\n  `,\n  VersusWrap: styled.div`\n    position: relative;\n    height: 74px;\n    border: 0.8px solid #eaeaec;\n    opacity: 0.8;\n    & p {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      background: #eaeaec;\n      border-radius: 50%;\n      width: 20px;\n      height: 20px;\n      line-height: 20px;\n      font-weight: 400;\n      text-align: center;\n      font-size: 14px;\n      color: #4c4e64;\n    }\n  `,\n};\n","/Users/jangjunsu/Documents/practice/baro-next/resource/components/modal/addressModal.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/modal/alarmModal.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/modal/defaultModal.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/modal/userModal.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/program/ncCode.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/progress/progressBar.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/progress/progressCircle.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/table/defaultTable.tsx",["562"],[],"import { ReactElement, Ref, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nexport interface ITableHeader {\n  title: string;\n  column: string;\n  align: \"left\" | \"center\" | \"right\" | \"justify\" | \"char\" | undefined;\n  size?: string;\n}\n\ninterface IProps {\n  header: ITableHeader[];\n  data: any[];\n  recordRef?: Ref<HTMLTableElement>;\n  isRowSpan?: boolean;\n  resultCount?: string | string[];\n}\n\nexport default function DefaultTable({\n  header,\n  data,\n  recordRef,\n  isRowSpan = true,\n  resultCount,\n}: IProps) {\n  const [mergedCells, setMergedCells] = useState([]);\n\n  // 연속된 셀들을 찾는 함수 정의\n  const findConsecutiveCells = (columnName: string) => {\n    const mergedCells: number[] = [];\n    let count = 1;\n    for (let i = data.length - 1; i > 0; i--) {\n      if (data[i][columnName] === data[i - 1][columnName]) {\n        count++;\n        mergedCells.push(0);\n      } else {\n        mergedCells.push(count);\n        count = 1;\n      }\n    }\n    mergedCells.push(count);\n    return mergedCells;\n  };\n\n  useEffect(() => {\n    if (isRowSpan) {\n      const mergedArray = findConsecutiveCells(header[0].column);\n      setMergedCells(mergedArray);\n    }\n  }, [data]);\n\n  if (data.length < 1) return <></>;\n\n  return (\n    <Table.Container ref={recordRef}>\n      <Table.Head>\n        <tr>\n          {header.map((head: ITableHeader, key: number) => {\n            return (\n              <th\n                key={`table_header_${head.title}_${key}`}\n                align={head.align}\n                style={{ width: head.size }}\n              >\n                {head.title}\n              </th>\n            );\n          })}\n        </tr>\n        {resultCount && (\n          <ChildrenWrap>\n            <td>{resultCount}</td>\n          </ChildrenWrap>\n        )}\n      </Table.Head>\n      <Table.Body>\n        {data.map((item: any, key: number) => {\n          return (\n            <tr key={`table_body_rows_${key}`}>\n              {header.map((head: ITableHeader, inkey: number) => {\n                const isFirstData = head.column === header[0].column;\n                const thisMergeCount =\n                  mergedCells[mergedCells.length - 1 - key];\n                const shoudSkip = isFirstData && thisMergeCount === 0;\n\n                if (shoudSkip) return;\n\n                const shouldMerge = isFirstData && thisMergeCount > 0;\n\n                return (\n                  <td\n                    key={`table_body_row_data_${inkey}`}\n                    align={head.align}\n                    rowSpan={isRowSpan && shouldMerge ? thisMergeCount : 1}\n                    className={\n                      head.column === header[0].column ? \"first_child\" : \"\"\n                    }\n                  >\n                    {`${item[head.column]}`}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </Table.Body>\n    </Table.Container>\n  );\n}\n\nconst Table = {\n  Container: styled.table`\n    border-collapse: collapse;\n    width: 100%;\n    height: 100%;\n  `,\n  Head: styled.thead`\n    position: sticky;\n    top: 0;\n    z-index: 100;\n\n    & tr {\n      height: 48px;\n      background: rgb(216, 228, 251);\n      font-size: 14px;\n      color: black;\n    }\n\n    & tr th {\n      padding: 0 16px;\n    }\n  `,\n  Body: styled.tbody`\n    & tr {\n      height: 38px;\n      border-bottom: thin solid rgba(0, 0, 0, 0.12);\n      font-size: 14px;\n      font-weight: 400;\n\n      &:hover {\n        background: rgb(230, 230, 230);\n        font-weight: 600;\n\n        & td.first_child {\n          background: rgb(213, 220, 233);\n        }\n      }\n    }\n\n    & tr td {\n      padding: 0 16px;\n    }\n\n    & tr:last-child {\n      border-bottom: 0;\n    }\n\n    & tr td.first_child {\n      background: rgb(235, 242, 253);\n    }\n  `,\n};\n\nconst ChildrenWrap = styled.tr`\n  background: none !important;\n  position: absolute;\n  right: 16px;\n  top: 4px;\n  z-index: 111;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 42px;\n`;\n","/Users/jangjunsu/Documents/practice/baro-next/resource/components/table/monitoringRow.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/tools/postCode.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/tools/separator.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/user/userInformation.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/components/warning/isEmpty.tsx",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/alarm/alarm.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/alarm/alarmList.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/auth/auth.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/machine/machine.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/machine/machineSummary.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/machine/notification.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/machine/notificationList.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/machine/processedQuantity.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/machine/realTimeData.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/monitor/monitor.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/monitor/monitorList.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/program/function.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/program/program.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/record/record.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/report/lot.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/report/product.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/report/productData.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/transmitters/transmitters.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/dto/user/user.dto.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/mobx/store.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/account/adminAccount.model.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/account/billInformation.model.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/account/loginAccount.model.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/account/monitorAccount.model.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/login/account.model.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/login/contact.model.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/machine/notification.model.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/menu/menu.model.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/menu/subMenu.model.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/menu/userMenu.model.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/product/product.model.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/models/record/record.model.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/alert.module.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/api.module.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/auth.module.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/chart.module.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/excel.module.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/machineStatus.module.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/mapper.module.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/socket.module.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/modules/time.module.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/auth/auth.viewModel.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/default.viewModel.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/indicator/indicator.viewModel.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/machine/machine.viewModel.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/main/main.viewModel.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/monitor/monitor.viewModel.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/program/program.viewModel.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/record/record.viewModel.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/report/report.viewModel.ts",[],[],"/Users/jangjunsu/Documents/practice/baro-next/resource/src/viewModels/user/user.viewModel.ts",[],[],{"ruleId":"563","severity":1,"message":"564","line":63,"column":6,"nodeType":"565","endLine":63,"endColumn":8,"suggestions":"566"},{"ruleId":"563","severity":1,"message":"564","line":20,"column":6,"nodeType":"565","endLine":20,"endColumn":8,"suggestions":"567"},{"ruleId":"563","severity":1,"message":"564","line":26,"column":6,"nodeType":"565","endLine":26,"endColumn":8,"suggestions":"568"},{"ruleId":"563","severity":1,"message":"564","line":48,"column":6,"nodeType":"565","endLine":48,"endColumn":8,"suggestions":"569"},{"ruleId":"563","severity":1,"message":"564","line":46,"column":6,"nodeType":"565","endLine":46,"endColumn":8,"suggestions":"570"},{"ruleId":"563","severity":1,"message":"571","line":41,"column":6,"nodeType":"565","endLine":41,"endColumn":8,"suggestions":"572"},{"ruleId":"563","severity":1,"message":"573","line":30,"column":6,"nodeType":"565","endLine":30,"endColumn":8,"suggestions":"574"},{"ruleId":"563","severity":1,"message":"575","line":23,"column":6,"nodeType":"565","endLine":23,"endColumn":8,"suggestions":"576"},{"ruleId":"563","severity":1,"message":"577","line":32,"column":6,"nodeType":"565","endLine":32,"endColumn":8,"suggestions":"578"},{"ruleId":"563","severity":1,"message":"579","line":37,"column":6,"nodeType":"565","endLine":37,"endColumn":8,"suggestions":"580"},{"ruleId":"563","severity":1,"message":"581","line":36,"column":6,"nodeType":"565","endLine":36,"endColumn":8,"suggestions":"582"},{"ruleId":"563","severity":1,"message":"583","line":40,"column":6,"nodeType":"565","endLine":40,"endColumn":14,"suggestions":"584"},{"ruleId":"563","severity":1,"message":"585","line":50,"column":6,"nodeType":"565","endLine":50,"endColumn":12,"suggestions":"586"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'machineViewModel'. Either include it or remove the dependency array.","ArrayExpression",["587"],["588"],["589"],["590"],["591"],"React Hook useEffect has a missing dependency: 'monitorViewModel'. Either include it or remove the dependency array.",["592"],"React Hook useEffect has a missing dependency: 'userViewModel'. Either include it or remove the dependency array.",["593"],"React Hook useEffect has a missing dependency: 'recordViewModel'. Either include it or remove the dependency array.",["594"],"React Hook useEffect has a missing dependency: 'reportViewModel'. Either include it or remove the dependency array.",["595"],"React Hook useEffect has a missing dependency: 'programViewModel'. Either include it or remove the dependency array.",["596"],"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["597"],"React Hook useEffect has a missing dependency: 'data.data'. Either include it or remove the dependency array. If 'setNotWorkTime' needs the current value of 'data.data', you can also switch to useReducer instead of useState and read 'data.data' in the reducer.",["598"],"React Hook useEffect has missing dependencies: 'findConsecutiveCells', 'header', and 'isRowSpan'. Either include them or remove the dependency array.",["599"],{"desc":"600","fix":"601"},{"desc":"600","fix":"602"},{"desc":"600","fix":"603"},{"desc":"600","fix":"604"},{"desc":"600","fix":"605"},{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"616","fix":"617"},{"desc":"618","fix":"619"},{"desc":"620","fix":"621"},"Update the dependencies array to be: [machineViewModel]",{"range":"622","text":"623"},{"range":"624","text":"623"},{"range":"625","text":"623"},{"range":"626","text":"623"},{"range":"627","text":"623"},"Update the dependencies array to be: [monitorViewModel]",{"range":"628","text":"629"},"Update the dependencies array to be: [userViewModel]",{"range":"630","text":"631"},"Update the dependencies array to be: [recordViewModel]",{"range":"632","text":"633"},"Update the dependencies array to be: [reportViewModel]",{"range":"634","text":"635"},"Update the dependencies array to be: [programViewModel]",{"range":"636","text":"637"},"Update the dependencies array to be: [router]",{"range":"638","text":"639"},"Update the dependencies array to be: [active, data.data]",{"range":"640","text":"641"},"Update the dependencies array to be: [data, findConsecutiveCells, header, isRowSpan]",{"range":"642","text":"643"},[1693,1695],"[machineViewModel]",[751,753],[1139,1141],[1427,1429],[1331,1333],[1281,1283],"[monitorViewModel]",[1354,1356],"[userViewModel]",[857,859],"[recordViewModel]",[989,991],"[reportViewModel]",[1270,1272],"[programViewModel]",[1517,1519],"[router]",[1230,1238],"[active, data.data]",[1178,1184],"[data, findConsecutiveCells, header, isRowSpan]"]